From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Spottedleaf <Spottedleaf@users.noreply.github.com>
Date: Sun, 3 Mar 2019 20:55:07 -0800
Subject: [PATCH] Multi-Threaded ticking CraftBukkit

These are the changes to CB

diff --git a/src/main/java/ca/spottedleaf/concrete/config/ConcreteConfig.java b/src/main/java/ca/spottedleaf/concrete/config/ConcreteConfig.java
index 75cb933f9f7070031557bf05ad3a044340a34d9f..d2942e46bcf0c8e0cdbf3c71e60bd66d5ddb81ec 100644
--- a/src/main/java/ca/spottedleaf/concrete/config/ConcreteConfig.java
+++ b/src/main/java/ca/spottedleaf/concrete/config/ConcreteConfig.java
@@ -88,6 +88,18 @@ public final class ConcreteConfig {
         return ConcreteConfig.config.getDouble(path, dfl);
     }
 
+    public static boolean tickWorldsInParallel;
+
+    /**
+     * if tickWorldsInParallel == true, then this value is used as a default only for worlds
+     */
+    public static int tickThreads;
+
+    private static void worldticking() {
+        tickWorldsInParallel = ConcreteConfig.getBoolean("tick-worlds-in-parallel", false);
+        tickThreads = ConcreteConfig.getInt("server-tick-threads", 1); // will be 4 in the future
+    }
+
     public static final class WorldConnfig {
 
         public final String worldName;
@@ -148,6 +160,14 @@ public final class ConcreteConfig {
             this.config.addDefault(path, Double.valueOf(dfl));
             return this.config.getDouble(path, dfl);
         }
+
+        /** ignored if {@link ConcreteConfig#tickWorldsInParallel} == false */
+        public int threads;
+
+        private void worldthreading() {
+            final int threads = this.getInt("tick-threads", -1);
+            this.threads = threads == -1 ? ConcreteConfig.tickThreads : threads;
+        }
     }
 
 }
\ No newline at end of file
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index be442137c5ff929650e0a1e1dc94366de689ea50..53130cab547d3b55eb160b689bf38d5c4ff45933 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -1669,7 +1669,10 @@ public final class CraftServer implements Server {
 
     @Override
     public boolean isPrimaryThread() {
-        return Thread.currentThread().equals(console.serverThread); // Paper - Fix issues with detecting main thread properly
+        /* Concrete start */
+        final Thread currThread = Thread.currentThread();
+        return currThread == console.serverThread || currThread instanceof ca.spottedleaf.concrete.util.TickThread;
+        /* Concrete End */
     }
 
     @Override
diff --git a/src/main/java/org/spigotmc/AsyncCatcher.java b/src/main/java/org/spigotmc/AsyncCatcher.java
index 9f7d2ef932ab41cef5d3d0736d20a7c7e4a2c888..c0f95ed8ec90349e639af32eb227d602efcc26c2 100644
--- a/src/main/java/org/spigotmc/AsyncCatcher.java
+++ b/src/main/java/org/spigotmc/AsyncCatcher.java
@@ -10,7 +10,7 @@ public class AsyncCatcher
 
     public static void catchOp(String reason)
     {
-        if ( enabled && Thread.currentThread() != MinecraftServer.getServer().serverThread )
+        if ( enabled && !org.bukkit.Bukkit.isPrimaryThread() ) /* Concrete */
         {
             throw new IllegalStateException( "Asynchronous " + reason + "!" );
         }
