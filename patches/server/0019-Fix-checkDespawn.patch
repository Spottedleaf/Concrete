From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Spottedleaf <Spottedleaf@users.noreply.github.com>
Date: Sun, 22 Dec 2019 08:26:31 -0800
Subject: [PATCH] Fix checkDespawn

- Didn't have softDespawn paper config entirely well
- Properly ignore players who do not affect spawning

diff --git a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
index 7ca67a4aa5d125ecc5bd1092f1ab4bb5ec60eb59..e76d5fd8dfc81afd02103b8e6adbda0ddec2206d 100644
--- a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
+++ b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
@@ -108,7 +108,7 @@ public class PaperWorldConfig {
     }
 
     public int softDespawnDistance;
-    public int hardDespawnDistance;
+    public int hardDespawnDistance; public double hardDespawnDistanceNotSquared; // Tuinity
     private void despawnDistances() {
         softDespawnDistance = getInt("despawn-ranges.soft", 32); // 32^2 = 1024, Minecraft Default
         hardDespawnDistance = getInt("despawn-ranges.hard", 128); // 128^2 = 16384, Minecraft Default
@@ -118,6 +118,7 @@ public class PaperWorldConfig {
         }
 
         log("Living Entity Despawn Ranges:  Soft: " + softDespawnDistance + " Hard: " + hardDespawnDistance);
+        hardDespawnDistanceNotSquared = hardDespawnDistance; // Tuinity
 
         softDespawnDistance = softDespawnDistance*softDespawnDistance;
         hardDespawnDistance = hardDespawnDistance*hardDespawnDistance;
diff --git a/src/main/java/net/minecraft/server/EntityInsentient.java b/src/main/java/net/minecraft/server/EntityInsentient.java
index 1991cee43d429574f2c0889f807e7cd090f7d7dd..27ef476001c29504e0b33a4d8ac0e8fcde3831e0 100644
--- a/src/main/java/net/minecraft/server/EntityInsentient.java
+++ b/src/main/java/net/minecraft/server/EntityInsentient.java
@@ -641,20 +641,27 @@ public abstract class EntityInsentient extends EntityLiving {
         if (this.world.getDifficulty() == EnumDifficulty.PEACEFUL && this.J()) {
             this.die();
         } else if (!this.isPersistent() && !this.I()) {
-            EntityHuman entityhuman = this.world.findNearbyPlayer(this, -1.0D);
+            EntityHuman entityhuman = this.world.findClosestPlayer(this.locX(), this.locY(), this.locZ(), this.world.paperConfig.hardDespawnDistanceNotSquared, (Entity player) ->  (((EntityHuman)player).affectsSpawning && !((EntityHuman)player).isSpectator())); // Tuinity - fix this function to properly handle spawning api
 
-            if (entityhuman != null && entityhuman.affectsSpawning) { // Paper - Affects Spawning API
+            if (entityhuman != null) { // Paper - Affects Spawning API // Tuinity - check not needed anymore
                 double d0 = entityhuman.h(this);
 
                 if (d0 > world.paperConfig.hardDespawnDistance) { // CraftBukkit - remove isTypeNotPersistent() check // Paper - custom despawn distances
                     this.die();
-                }
-
-                if (this.ticksFarFromPlayer > 600 && this.random.nextInt(800) == 0 && d0 > world.paperConfig.softDespawnDistance) { // CraftBukkit - remove isTypeNotPersistent() check // Paper - custom despawn distances
+                } else if (this.ticksFarFromPlayer > 600 && this.random.nextInt(800) == 0 && d0 > world.paperConfig.softDespawnDistance) { // CraftBukkit - remove isTypeNotPersistent() check // Paper - custom despawn distances // Tuinity
                     this.die();
-                } else if (d0 < 1024.0D) {
+                } else if (d0 < world.paperConfig.softDespawnDistance) { // Tuinity
                     this.ticksFarFromPlayer = 0;
                 }
+            } else { // Tuinity start
+                // no player in range, try all players
+                for (EntityHuman player : this.world.getPlayers()) {
+                    if (player.affectsSpawning && !player.isSpectator()) {
+                        this.die();
+                        break;
+                    }
+                }
+                /* Concret eend */
             }
 
         } else {
